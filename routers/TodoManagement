const express = require("express");
const router = express.Router();
const Task = require("../models/todo");

// Create a new task
router.post("/", async (req, res) => {
  const task = new Task({
    task: req.body.task,
  });
  try {
    const savedTask = await task.save();
    res.json(savedTask);
  } catch (err) {
    res.json({ message: err });
  }
});

// Get all tasks
router.get("/", async (req, res) => {
  try {
    const tasks = await Task.find();
    res.json(tasks);
  } catch (err) {
    res.json({ message: err });
  }
});

// Get a specific task by ID
router.get("/:taskid", async (req, res) => {
  try {
    const task = await Task.findById(req.params.taskid);
    res.json(task);
  } catch (err) {
    res.json({ message: err });
  }
});

// Delete a task by ID
router.delete("/:taskid", async (req, res) => {
  try {
    const removedTask = await Task.findByIdAndRemove({
      _id: req.params.taskid,
    });
    res.json(removedTask);
  } catch (err) {
    console.log(err);
  }
});

// Update a task by ID
router.patch("/:taskid", async (req, res) => {
  try {
    const updatedTask = await Task.findByIdAndUpdate(
      req.params.taskid,
      {
        task: req.body.task,
        completed: req.body.completed,
      },
      { new: true } // Return the updated task
    );
    res.json(updatedTask);
  } catch (err) {
    res.json({ message: err });
  }
});

// Toggle task completion by ID
router.patch("/complete/:taskid", async (req, res) => {
  try {
    const taskId = req.params.taskid;
    console.log("Task ID:", taskId);

    const task = await Task.findById(taskId);
    console.log("Original Task:", task);

    // Toggle the completed status
    task.completed = !task.completed;

    // If you want to explicitly set it to 'true', you can do this:
    // task.completed = true;

    const updatedTask = await task.save();
    console.log("Updated Task:", updatedTask);

    res.json(updatedTask);
  } catch (err) {
    console.error("Error toggling task completion:", err);
    res.status(500).json({ message: err });
  }
});

module.exports = router;
